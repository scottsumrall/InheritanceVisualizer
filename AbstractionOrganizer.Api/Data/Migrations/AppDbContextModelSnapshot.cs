// <auto-generated />
using AbstractionOrganizer.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AbstractionOrganizer.Api.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbstractionOrganizer.Models.ClassModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessModifier")
                        .HasColumnType("int");

                    b.Property<int>("ClassModifier")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ClassHeaders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessModifier = 0,
                            ClassModifier = 0,
                            Name = "class1"
                        },
                        new
                        {
                            Id = 2,
                            AccessModifier = 2,
                            ClassModifier = 0,
                            Name = "class2"
                        },
                        new
                        {
                            Id = 3,
                            AccessModifier = 2,
                            ClassModifier = 1,
                            Name = "class3"
                        },
                        new
                        {
                            Id = 4,
                            AccessModifier = 1,
                            ClassModifier = 2,
                            Name = "class4"
                        });
                });

            modelBuilder.Entity("AbstractionOrganizer.Models.VariableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessModifier")
                        .HasColumnType("int");

                    b.Property<int>("ClassModelId")
                        .HasColumnType("int");

                    b.Property<bool>("IsStatic")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ClassModelId");

                    b.ToTable("VariableModels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessModifier = 0,
                            ClassModelId = 1,
                            IsStatic = false,
                            Name = "testVar1"
                        },
                        new
                        {
                            Id = 2,
                            AccessModifier = 1,
                            ClassModelId = 1,
                            IsStatic = false,
                            Name = "testVar2"
                        });
                });

            modelBuilder.Entity("AbstractionOrganizer.Models.VariableModel", b =>
                {
                    b.HasOne("AbstractionOrganizer.Models.ClassModel", "ClassModel")
                        .WithMany("VariableModels")
                        .HasForeignKey("ClassModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClassModel");
                });

            modelBuilder.Entity("AbstractionOrganizer.Models.ClassModel", b =>
                {
                    b.Navigation("VariableModels");
                });
#pragma warning restore 612, 618
        }
    }
}
