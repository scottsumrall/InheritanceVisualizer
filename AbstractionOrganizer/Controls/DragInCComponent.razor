
@using Microsoft.JSInterop
@inject IJSRuntime JS;



<div id="button">
    <button class="button" @onclick="CreateClass">new E</button>
</div>

<div id="class-drop-zone"></div>
    @foreach (string value in Values)
    {
        <ClassBlock DivID="@value"></ClassBlock>
        //maybe have a 'new'
    }




@code {
    List<String> Values = new List<String> ();

    //geDiagramContainer

    private int _classCounter = 0;
    private String? IDName;

    private async Task CreateClass()
    {
        IDName = "class" + _classCounter;
        Values.Add(IDName);
        _classCounter++;
        System.Diagnostics.Debug.Print(IDName);
    }


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JS.InvokeVoidAsync("testDragAndDrop", ".draggable");
            
        }
        await JS.InvokeVoidAsync("setInitialPos", IDName);
    }
}

